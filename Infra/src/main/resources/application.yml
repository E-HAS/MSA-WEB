server:
  port: 8761
  ssl:
    enabled: true
    trust-store: file:///C:/ssl/truststore.jks
    trust-store-password: QWas!@34
    key-store: file:///C:/ssl/server.p12
    key-store-password: QWas!@34
    key-store-type: PKCS12
    key-alias: server-ssl-key
    
spring:
  application:
    name: infra-server
  profiles:
    active: native
  security:
    basic:
      enabled: true
    user:
      name: root
      password: QWas1234
  cloud:
    config:
      server:
        native:
          #search-locations: file:/server-yml/
          search-locations: file:///D:/server-yml/
  datasource:
    #url: jdbc:mysql://192.168.1.101:3306/project?characterEncoding=UTF-8&serverTimezone=UTC
    url: jdbc:mariadb://192.168.1.101:3306/project?characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: QWas!@34
    #driver-class-name: com.mysql.cj.jdbc.Driver
    driver-class-name: org.mariadb.jdbc.Driver    
eureka:
  server:
    response-cache-update-interval-ms: 5000
    eviction-interval-timer-in-ms: 10000
  client:
    register-with-eureka: false
    fetch-registry: false
         
management:
  endpoints:
    web:
      exposure:
        include: '*' #include: refresh, health, beans
  prometheus: #Micrometer를 통해 수집된 Metric 데이터를 Prometheus 형식으로 노출할지 여부를 결정
    metrics:
      export:
        enabled: true
        
value:
  security:
    allow-ip-list: 127.0.0.1, 192.168.1.128, 192.168.1.101, 192.168.1.102
  kafka:
    metrics:
      bootstrap-servers: 192.168.1.101:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      topic:
        services-metrics-name: serversMetrics
  prometheus:
    check:
      list: process_cpu
        , system_cpu 
        , jvm_memory
        , jvm_threads
        , tomcat_sessions
        , http_server
        , executor_pool
        , executor_active